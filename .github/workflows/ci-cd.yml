name: Java CI/CD Pipeline

# Триггер для запуска workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install JUnit dependency
        run: |
          mkdir -p lib
          curl -L -o lib/junit-platform-console-standalone-1.10.0.jar https://repo1.maven.org/maven2/org/junit/platform/junit-platform-console-standalone/1.10.0/junit-platform-console-standalone-1.10.0.jar

      - name: Build and Test with javac
        run: |
          javac -cp "lib/junit-platform-console-standalone-1.10.0.jar:src/main/java" src/main/java/com/example/App.java src/test/java/com/example/AppTest.java
          java -cp "lib/junit-platform-console-standalone-1.10.0.jar:src/main/java" org.junit.platform.console.ConsoleLauncher --scan-class-path

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install JUnit dependency
        run: |
          if (-Not (Test-Path -Path "lib")) { New-Item -ItemType Directory -Path "lib" }
          Invoke-WebRequest -Uri "https://repo1.maven.org/maven2/org/junit/platform/junit-platform-console-standalone/1.10.0/junit-platform-console-standalone-1.10.0.jar" -OutFile "lib/junit-platform-console-standalone-1.10.0.jar"
        shell: pwsh

      - name: Build and Test with javac
        run: |
          javac -cp "lib/junit-platform-console-standalone-1.10.0.jar;src/main/java" src/main/java/com/example/App.java src/test/java/com/example/AppTest.java
          java -cp "lib/junit-platform-console-standalone-1.10.0.jar;src/main/java" org.junit.platform.console.ConsoleLauncher --scan-class-path

  build-macos-intel:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install JUnit dependency
        run: |
          mkdir -p lib
          curl -L -o lib/junit-platform-console-standalone-1.10.0.jar https://repo1.maven.org/maven2/org/junit/platform/junit-platform-console-standalone/1.10.0/junit-platform-console-standalone-1.10.0.jar

      - name: Build and Test with javac
        run: |
          javac -cp "lib/junit-platform-console-standalone-1.10.0.jar:src/main/java" src/main/java/com/example/App.java src/test/java/com/example/AppTest.java
          java -cp "lib/junit-platform-console-standalone-1.10.0.jar:src/main/java" org.junit.platform.console.ConsoleLauncher --scan-class-path

  build-macos-apple-silicon:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install JUnit dependency
        run: |
          mkdir -p lib
          curl -L -o lib/junit-platform-console-standalone-1.10.0.jar https://repo1.maven.org/maven2/org/junit/platform/junit-platform-console-standalone/1.10.0/junit-platform-console-standalone-1.10.0.jar

 #     - name: Build and Test with javac
 #       run: |
 #         javac -cp "lib/junit-platform-console-standalone-1.10.0.jar:src/main/java" src/main/java/com/example/App.java src/test/java/com/example/AppTest.java
 #         java -cp "lib/junit-platform-console-standalone-1.10.0.jar:src/main/java" org.junit.platform.console.ConsoleLauncher --scan-class-path

      - name: Build application
        run: |
          echo "Building on macOS-latest"
  docker-build-push:
    needs: [build-linux, build-windows, build-macos-intel, build-macos-apple-silicon] # boild
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/java-app:latest .

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/java-app:latest

